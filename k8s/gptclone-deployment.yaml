apiVersion: apps/v1
kind: Deployment
metadata:
  name: gptclone-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: gptclone
  template:
    metadata:
      labels:
        io.kompose.service: gptclone
    spec:
      containers:
        - name: gptclone
          image: si3mshady/basic_rag:2
          ports:
            - containerPort: 3000
          env:
            - name: REACT_APP_API_URL
              value: "pgvector"
            - name: REACT_APP_CLIENT_ID
              value: "rag-client"
            - name: REACT_APP_REALM
              value: "RAG"
            - name: REACT_APP_SERVER
              value: "value: "pgvector-service.default.svc.cluster.local" 
            - name: REACT_APP_PORT   # Corrected the environment variable definition
              value: "5000"
---
apiVersion: v1
kind: Service
metadata:
  name: gptclone-service
spec:
  selector:
    io.kompose.service: gptclone
  ports:
    - protocol: TCP
      port: 80   # Exposed port on the Service should match the external port (e.g., 80 for HTTP)
      targetPort: 3000
  type: LoadBalancer



 helm upgrade --install ingress-nginx ingress-nginx --repo https://kubernetes.github.io/ingress-nginx
 # kubectl create deployment gptclone-deployment --image=si3mshady/basic_rag:2 --port=3000 --replicas=1 
 kubectl create deploy gptclone-deployment --port=3000 --replicas=1 --image=si3mshady/basic_rag:2  &&  kubectl set env deployment/gptclone-deployment REACT_APP_SERVER=34.168.124.210 REACT_APP_PORT=5000
 kubectl expose deployment/gptclone-deployment
 # kubectl create ingress example-ingress --rule="/"=your-service-name:80
d
